@startuml Manufacturing Process State Diagram

' Style and theme configuration
!theme plain
skinparam StateBackgroundColor #F0F8FF
skinparam StateBorderColor #008B8B
skinparam StateArrowColor #2F4F4F
skinparam StateFontSize 14
skinparam StateFontName Arial

' Title
title Manufacturing Process - State Diagram

' Initial state
[*] --> WaitingForStock : new ManufacturingProcess()

' WaitingForStock state
state WaitingForStock {
  [*] --> CheckStock : process()
  
  state CheckStock <<choice>>
  CheckStock --> StockAvailable : product.checkStockAvailability(inventory, 1) == true
  CheckStock --> StockUnavailable : product.checkStockAvailability(inventory, 1) == false
  
  state StockAvailable {
    [*] --> DeductStock : deduct components from inventory
  }
  
  state StockUnavailable
  
  DeductStock --> [*]
  StockUnavailable --> [*]
}

' InManufacturing state
state InManufacturing {
  [*] --> SimulateManufacturing : process()
  
  state SimulateManufacturing <<choice>>
  SimulateManufacturing --> Success : random outcome = 1
  SimulateManufacturing --> SystemError : random outcome = 2
  SimulateManufacturing --> DamagedComponent : random outcome = 3
  
  state Success {
    [*] --> AddProduct : add product to inventory
  }
  
  state SystemError
  state DamagedComponent
  
  AddProduct --> [*]
  SystemError --> [*]
  DamagedComponent --> [*]
}

' Completed state
state Completed {
  [*] --> [*] : process() (no action)
}

' Failed state
state Failed {
  [*] --> [*] : process() (no action)
}

' State transitions
WaitingForStock --> InManufacturing : Stock available
WaitingForStock --> Failed : Stock shortage \n recordResult(FAILED_STOCK_SHORTAGE)

InManufacturing --> Completed : Manufacturing successful \n recordResult(COMPLETED)
InManufacturing --> Failed : System error \n recordResult(FAILED_SYSTEM_ERROR)
InManufacturing --> Failed : Damaged component \n recordResult(FAILED_DAMAGED_COMPONENT)

Completed --> [*]
Failed --> [*]

' Notes
note bottom of WaitingForStock
  Checks if all required components 
  are available in the inventory
end note

note bottom of InManufacturing
  Randomly simulates one of three outcomes:
  1. Successful manufacturing
  2. System error
  3. Damaged component
end note

note bottom of Completed
  Terminal state indicating
  successful manufacturing
end note

note bottom of Failed
  Terminal state indicating
  manufacturing failure
end note

@enduml 